worker_processes 2;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/conf.d/*.conf;

    server_tokens off;
    charset utf-8;

    client_max_body_size 512m;

    # server {
    #     listen [::]:443 ssl;
    #     listen 443 ssl;
    #     http2 on;
    #     ssl_certificate     /etc/letsencrypt/live/$server_name/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/$server_name/privkey.pem;
    #     server_name $server_name;

    #     access_log /var/log/nginx/access.log;
    #     error_log /var/log/nginx/error.log;

    #     ssl_buffer_size 8k;

    #     ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    #     ssl_protocols TLSv1.2;
    #     ssl_prefer_server_ciphers on;

    #     ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    #     ssl_ecdh_curve secp384r1;
    #     ssl_session_tickets off;

    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #     resolver 8.8.8.8;

    #     location / {
    #         add_header 'Access-Control-Allow-Origin' '*';
    #         add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
    #         add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
    #         add_header 'Access-Control-Max-Age' 1728000;
    #         add_header 'Content-Type' 'application/json';
            
    #         if ($request_method = OPTIONS) {
    #             add_header 'Content-Type' 'text/plain; charset=utf-8';
    #             add_header 'Content-Length' 0;
    #             return 204;
    #         }

    #         proxy_set_header Host $host;
    #         proxy_http_version 1.1;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Origin $http_origin;
    #         proxy_set_header Referer $http_referer;
    #         proxy_cache_bypass $http_upgrade;
    #         proxy_redirect off;
    #         proxy_buffering off;
    #         proxy_pass http://app:8080;
    #     }
    # }

    server {
        listen [::]:80;
        listen 80;
        server_name $server_name;

        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/certbot;
        }

        # location / {
        #     return 301 https://$host$request_uri;
        # }
        location / {
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Origin $http_origin;
            proxy_set_header Referer $http_referer;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;
            proxy_buffering off;
            proxy_pass http://app:3000;
        }
    }

}